// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'
    ext.coroutine_version = '1.3.8'
    ext.dokka_version = '1.4.10.2'
    ext.aws_version = '2.16.12'

    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.owasp:dependency-check-gradle:6.1.0'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.22.0"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        if (project.file("${rootProject.projectDir}/util/sonarqube.gradle").exists()) {
            classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
        }
        classpath "com.cookpad.android.licensetools:license-tools-plugin:1.7.0"
        classpath "org.jmailen.gradle:kotlinter-gradle:2.1.3"
    }
}
plugins {
    id "io.codearte.nexus-staging" version "0.22.0"
}
ext {
    projectGroup = 'com.sudoplatform'
}
nexusStaging {
    packageGroup = projectGroup
    stagingProfileId = '14314878e2a1b'
    numberOfRetries = 40
    delayBetweenRetriesInMillis = 5000
}

ext {
    projectGroup = 'com.sudoplatform'
}
if(project.file("${rootProject.projectDir}/util/internal-repo.gradle").exists()) {
    apply from: "${rootProject.projectDir}/util/internal-repo.gradle"
}
else {
    ext["internalRepoUsername"] = ""
    ext["internalRepoPassword"] = ""
    ext["internalSnapshotRepoUrl"] = ""
    ext["internalSnapshotRepoName"] = ""
    ext["internalReleaseRepoUrl"] = ""
    ext["internalReleaseRepoName"] = ""
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        if (internalRepoUsername?.trim()) {
            maven {
                name = internalSnapshotRepoName
                url = internalSnapshotRepoUrl
                credentials {
                    username = internalRepoUsername
                    password = internalRepoPassword
                }
            }
            maven {
                name = internalReleaseRepoName
                url = internalReleaseRepoUrl
                credentials {
                    username = internalRepoUsername
                    password = internalRepoPassword
                }
            }
        }
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
